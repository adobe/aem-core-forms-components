version: 2.1

orbs:
  codecov: codecov/codecov@1.0.5
  browser-tools: circleci/browser-tools@1.3.0

common:
  restore_cache: &restore_cache
    restore_cache:
      keys:
        - maven-repo-v2-{{ arch }}-{{ .Branch }}-{{ checksum "pom.xml" }}
        - maven-repo-v2-{{ arch }}-{{ .Branch }}
        - maven-repo-v2-

  cypress_test_steps: &cypress_test_steps
    steps:
      - checkout
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          command: |
              google-chrome --version
              chromedriver --version
              which google-chrome
          name: Check browser installed
      - *restore_cache
      - attach_workspace:
          at: /home/circleci/build
      - run:
          name: Configure GIT
          command: |
            git config user.email "ci-build@aemforms"
            git config user.name "ci-build"
      - add_ssh_keys:
          fingerprints:
            - "cc:0f:09:fc:97:72:c5:12:2e:fb:ea:a0:a2:39:3c:64"
      - run:
          name: Install Chrome Launcher
          command: npm install chrome-launcher
      - run:
          name: Install lighthouse
          command: npm install lighthouse
      - run:
          name: Install Web Driver
          command: npm install selenium-webdriver
      - run:
          name: Install AXE Core/Webdriver
          command: npm install @axe-core/webdriverjs
      - run:
          name: Install AXE HTML Reporter
          command: npm install axe-html-reporter
      - run:
          name: UI tests
          command: node .circleci/ci/it-tests.js
      - run:
          name: Calculate lighthouse Scores
          command: node .circleci/ci/lighthouse.js
      - run:
          name: Check Accessibility
          command: node .circleci/ci/accessibility-axe.js
      - run:
          name: Stop CQ
          command: node .circleci/ci/stop-cq.js
      - store_test_results:
          path: ui.tests/test-module/target/reports
      # Save test results as artifacts
      - store_artifacts:
          path: ui.tests/test-module/target
      # Save AEM logs as artifacts
      - store_artifacts:
          path: logs
      - store_artifacts:
          path: artifacts

  docker_auth: &docker_auth
    auth:
      username: $DOCKER_USER
      password: $DOCKER_PASS

executors:
  forms_executor:
    docker:
      - image: cimg/openjdk:11.0.16-browsers
  forms_executor_java8:
    docker:
      - image: cimg/openjdk:8.0-browsers
  test_executor_cloudready:
    docker:
      - image: docker-adobe-cif-release.dr-uw2.adobeitc.com/circleci-qp:6.4.6-openjdk11
        <<: *docker_auth
      - image: docker-adobe-cif-release.dr-uw2.adobeitc.com/circleci-aem-cloudready:11983-openjdk11
        <<: *docker_auth

jobs:
  build-java-11:
    executor: forms_executor
    working_directory: /home/circleci/build
    steps:
      - checkout
      - restore_cache:
          keys: 
            - maven-repo-v1-{{ checksum "pom.xml" }}
            - maven-repo-v1-
      - run:
          name: Update permissions
          command: sudo chown -R circleci /usr/local/lib/node_modules
      - run:
          name: Build
          command: node .circleci/ci/build.js # this is important, since this is used during UI test run too
      - save_cache:
          paths:
            - ~/.m2
          key: maven-repo-v2-{{ arch }}-{{ .Branch }}-{{ checksum "pom.xml" }}
      - persist_to_workspace:
          root: /home/circleci/build
          paths:
            - configuration.json
            - bundles/core/target
            - bundles/af-core/target
            - ui.apps/target/*.zip
            - ui.af.apps/target/*.zip
            - examples/ui.apps/target/*.zip
            - examples/ui.content/target/*.zip
            - examples/core/target
            - it/core/target/*.jar
            - it/apps/target/*.zip
            - it/content/target/*.zip
            - it/config/target/*.zip
            - jsdocs/target/jsapi
      - store_test_results:
          path: bundles/core/target/surefire-reports
      - store_artifacts:
          path: bundles/core/target/surefire-reports
      - codecov/upload:
          conf: .circleci/codecov.yml
          flags: unittests

  build-java-8:
    executor: forms_executor_java8
    working_directory: /home/circleci/build
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Update permissions
          command: sudo chown -R circleci /usr/local/lib/node_modules
      - run:
          name: Build
          command: node .circleci/ci/build.js
      - store_artifacts:
          path: test-results/junit

  cypress-chrome-cloudready-with-addon:
    executor: test_executor_cloudready
    environment:
      AEM: addon
      TYPE: cypress
      BROWSER: chrome
      PRERELEASE: 'true'
    resource_class: large
    working_directory: /home/circleci/build
    <<: *cypress_test_steps

  cypress-chrome-cloudready-with-latest-addon:
    executor: test_executor_cloudready
    environment:
      AEM: addon-latest
      TYPE: cypress
      BROWSER: chrome
      PRERELEASE: 'true'
    resource_class: large
    working_directory: /home/circleci/build
    <<: *cypress_test_steps

  jsdocs-deploy:
    docker:
      - image: node:8.10.0
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/build
      - run:
          # since js docs can have folders with "_" prefix
          name: Disable jekyll builds
          command: touch jsdocs/target/jsapi/.nojekyll
      - run:
          name: Install and configure dependencies
          command: |
            npm install -g --silent gh-pages@2.0.1
            git config user.email "ci-build@aemforms"
            git config user.name "ci-build"
      - add_ssh_keys:
          fingerprints:
            - "cc:0f:09:fc:97:72:c5:12:2e:fb:ea:a0:a2:39:3c:64"
      - run:
          name: Deploy jsdocs to gh-pages branch
          command: gh-pages --dotfiles --message "[skip ci] jsdoc updates" --dist jsdocs/target/jsapi/
 
  release:
    executor: forms_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - maven-repo-v1-{{ checksum "pom.xml" }}
            - maven-repo-v1-
      - run:
          name: Update permissions
          command: sudo chown -R circleci /usr/local/lib/node_modules
      - run:
          name: Release
          # Only performs a 'mvn deploy' after the 'mvn release:prepare' because circleCI
          # already checks out the git tag like 'mvn release:perform' would do.
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> /home/circleci/.npmrc
            echo $GPG_PRIVATE_KEY | base64 --decode | gpg --batch --import
            mvn -B -s /home/circleci/project/.circleci/settings.xml clean deploy -P release-sign-artifacts,cloud,adobe-public -Dskip-it
            rm -rf /home/circleci/.gnupg
            rm -rf /home/circleci/.npmrc

workflows:
  version: 2
  build-and-release:
    jobs:
      - build-java-11:
          filters:
            tags:
              only: /.*/
      - build-java-8:
          filters:
            tags:
              only: /.*/
      - cypress-chrome-cloudready-with-addon:
          filters:
            tags:
              only: /.*/
          requires:
            - build-java-11
            - build-java-8
      - cypress-chrome-cloudready-with-latest-addon:
          filters:
            tags:
              only: /.*/
          requires:
            - build-java-11
            - build-java-8
      - jsdocs-deploy:
          requires:
            - build-java-11
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^core-forms-components-reactor-\d+\.\d+\.\d+$/
      - release:
          requires:
            - build-java-11
            - jsdocs-deploy
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^core-forms-components-reactor-\d+\.\d+\.\d+$/
